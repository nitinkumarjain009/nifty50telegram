name: Nifty Bot Analysis Scheduler (Debug Mode)
on:
  workflow_dispatch:  # Manual trigger only for debugging

jobs:
  debug-messaging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas beautifulsoup4 pandas_ta twilio numpy
      
      - name: Fix numpy NaN issue
        run: |
          python -c "import numpy as np; np.NaN = np.nan; print('numpy.NaN patch applied')"
      
      - name: Create debug script
        run: |
          cat > debug_messaging.py << 'EOF'
          import os
          import requests
          import logging
          import sys
          from twilio.rest import Client

          # Set up detailed logging to show everything
          logging.basicConfig(
              level=logging.DEBUG,
              format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
              handlers=[logging.StreamHandler(sys.stdout)]
          )
          logger = logging.getLogger(__name__)

          # Get credentials from environment
          TELEGRAM_API_KEY = os.environ.get("TELEGRAM_API_KEY")
          TELEGRAM_CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID")
          TWILIO_ACCOUNT_SID = os.environ.get("TWILIO_ACCOUNT_SID")
          TWILIO_AUTH_TOKEN = os.environ.get("TWILIO_AUTH_TOKEN")
          TWILIO_FROM_NUMBER = os.environ.get("TWILIO_FROM_NUMBER")
          WHATSAPP_ADMIN = os.environ.get("WHATSAPP_ADMIN")

          # Debug environment variables (without revealing full values)
          def debug_env_vars():
              logger.info(f"TELEGRAM_API_KEY available: {'Yes' if TELEGRAM_API_KEY else 'No'}")
              if TELEGRAM_API_KEY:
                  logger.info(f"TELEGRAM_API_KEY format check: {TELEGRAM_API_KEY[:5]}...{TELEGRAM_API_KEY[-5:] if len(TELEGRAM_API_KEY) > 10 else ''}")
              
              logger.info(f"TELEGRAM_CHAT_ID available: {'Yes' if TELEGRAM_CHAT_ID else 'No'}")
              if TELEGRAM_CHAT_ID:
                  logger.info(f"TELEGRAM_CHAT_ID value: {TELEGRAM_CHAT_ID}")
              
              logger.info(f"TWILIO_ACCOUNT_SID available: {'Yes' if TWILIO_ACCOUNT_SID else 'No'}")
              if TWILIO_ACCOUNT_SID:
                  logger.info(f"TWILIO_ACCOUNT_SID format check: {TWILIO_ACCOUNT_SID[:5]}...{TWILIO_ACCOUNT_SID[-5:] if len(TWILIO_ACCOUNT_SID) > 10 else ''}")
              
              logger.info(f"TWILIO_AUTH_TOKEN available: {'Yes' if TWILIO_AUTH_TOKEN else 'No'}")
              logger.info(f"TWILIO_FROM_NUMBER available: {'Yes' if TWILIO_FROM_NUMBER else 'No'}")
              logger.info(f"WHATSAPP_ADMIN available: {'Yes' if WHATSAPP_ADMIN else 'No'}")

          # Test Telegram connection
          def test_telegram():
              if not TELEGRAM_API_KEY or not TELEGRAM_CHAT_ID:
                  logger.error("Missing Telegram credentials")
                  return False
              
              logger.info("Testing Telegram bot info...")
              try:
                  # Test bot info
                  url = f"https://api.telegram.org/bot{TELEGRAM_API_KEY}/getMe"
                  response = requests.get(url)
                  logger.info(f"GetMe Response: {response.status_code}")
                  logger.info(f"GetMe Content: {response.text[:200]}")  # Show first 200 chars
                  
                  # Test sending message
                  logger.info("Testing message sending...")
                  url = f"https://api.telegram.org/bot{TELEGRAM_API_KEY}/sendMessage"
                  payload = {
                      "chat_id": TELEGRAM_CHAT_ID,
                      "text": "üß™ This is a test message from Nifty Bot debugging script",
                      "parse_mode": "Markdown"
                  }
                  response = requests.post(url, data=payload)
                  logger.info(f"SendMessage Response: {response.status_code}")
                  logger.info(f"SendMessage Content: {response.text[:200]}")
                  
                  return response.status_code == 200
              except Exception as e:
                  logger.error(f"Telegram test failed: {str(e)}")
                  return False

          # Test Twilio/WhatsApp connection
          def test_twilio():
              if not all([TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_FROM_NUMBER, WHATSAPP_ADMIN]):
                  logger.error("Missing Twilio credentials")
                  return False
              
              logger.info("Testing Twilio client...")
              try:
                  # Initialize client
                  client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
                  
                  # Test account info
                  account = client.api.accounts(TWILIO_ACCOUNT_SID).fetch()
                  logger.info(f"Twilio account status: {account.status}")
                  
                  # Send test message
                  logger.info("Testing WhatsApp message sending...")
                  message = client.messages.create(
                      body="üß™ This is a test message from Nifty Bot debugging script",
                      from_=f"whatsapp:{TWILIO_FROM_NUMBER}",
                      to=f"whatsapp:{WHATSAPP_ADMIN}"
                  )
                  logger.info(f"Message SID: {message.sid}")
                  logger.info(f"Message Status: {message.status}")
                  
                  return True
              except Exception as e:
                  logger.error(f"Twilio test failed: {str(e)}")
                  return False

          # Main function
          def main():
              logger.info("Starting messaging debug...")
              debug_env_vars()
              
              # Test Telegram
              logger.info("\n--- TESTING TELEGRAM ---")
              telegram_success = test_telegram()
              logger.info(f"Telegram test {'succeeded' if telegram_success else 'failed'}")
              
              # Test Twilio/WhatsApp
              logger.info("\n--- TESTING TWILIO/WHATSAPP ---")
              twilio_success = test_twilio()
              logger.info(f"Twilio test {'succeeded' if twilio_success else 'failed'}")
              
              logger.info("\n--- DEBUG SUMMARY ---")
              logger.info(f"Telegram: {'‚úÖ' if telegram_success else '‚ùå'}")
              logger.info(f"WhatsApp: {'‚úÖ' if twilio_success else '‚ùå'}")
              
          if __name__ == "__main__":
              main()
          EOF
      
      - name: Run debug script
        id: debug
        continue-on-error: true
        env:
          TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
          WHATSAPP_ADMIN: ${{ secrets.WHATSAPP_ADMIN }}
        run: |
          python debug_messaging.py
