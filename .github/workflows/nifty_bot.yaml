name: Nifty Bot Analysis Scheduler
on:
  schedule:
    # Run at 9:15 AM and 3:45 PM IST on weekdays (3:45 AM and 10:15 AM UTC)
    - cron: '45 3,10 * * 1-5'
  
  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:
jobs:
  run-nifty-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          else 
            pip install requests pandas beautifulsoup4 twilio numpy
            pip install git+https://github.com/twopirllc/pandas-ta.git@development
          fi
      
      - name: Install script as module
        run: |
          # Create simple setup.py
          python -c "
          with open('setup.py', 'w') as f:
              f.write('''from setuptools import setup, find_packages
          
          setup(
              name=\"nifty_bot\",
              version=\"0.1\",
              packages=find_packages(),
              py_modules=[\"nifty_telegram_bot_github\"],
          )
          ''')
          "
          # Install the package
          pip install -e .
          
          # Verify installation
          pip list
      
      - name: Send startup notification
        run: |
          echo "Sending bot startup notification..."
          if [ -n "${{ secrets.TELEGRAM_API_KEY }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_API_KEY }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="üöÄ Nifty Bot Analysis started running at $(date)"
          fi
      
      - name: Create runner script
        run: |
          python -c "
          with open('run_script.py', 'w') as f:
              f.write('''import numpy as np
          np.NaN = np.nan  # Add NaN to numpy namespace
          
          try:
              import nifty_telegram_bot_github
              print('Successfully imported and ran nifty_telegram_bot_github')
          except Exception as e:
              import traceback
              print(f'Error running nifty_telegram_bot_github: {e}')
              traceback.print_exc()
              exit(1)
          ''')
          "
      
      - name: Run Nifty Bot Script
        id: run_script
        continue-on-error: true
        env:
          TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          WHATSAPP_ADMIN: ${{ secrets.WHATSAPP_ADMIN }}
          WHATSAPP_GROUP: ${{ secrets.WHATSAPP_GROUP }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
        run: python run_script.py
      
      - name: Check for errors
        if: steps.run_script.outcome == 'failure'
        run: |
          echo "Script execution failed. Sending notification..."
          if [ -n "${{ secrets.TELEGRAM_API_KEY }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_API_KEY }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="‚ö†Ô∏è Nifty Bot Analysis failed to run. Please check GitHub Actions logs."
          fi
      
      - name: Upload logs on failure
        if: steps.run_script.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: |
            *.log
            *.txt
          retention-days: 5
